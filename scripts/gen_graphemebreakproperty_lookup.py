from ucd_parsing_utils import get_properties, PROP_CPP_CONV


class GraphemeBreakProperty:
    def __init__(self, codepoint, prop_type):
        self.codepoint = codepoint
        self.prop_type = PROP_CPP_CONV[prop_type]


def get_cpp_unordermap_data(props):
    start_header_data = \
        '// NOTE: This file was autogenerated via ' \
        'scripts/gen_graphemebreakproperty_lookup.py\n' \
        '#include <unordered_map>\n\n' \
        '#include <auc/codepoint.hpp>\n' \
        '#include <auc/property.hpp>\n\n' \
        '// https://www.unicode.org/' \
        'Public/15.0.0/ucd/auxiliary/GraphemeBreakProperty.txt\n'\
        'namespace auc {\n' \
        'namespace detail {\n\n' \
        'std::unordered_map<codepoint, property> ' \
        'codepoint_break_lookup = {\n'

    header_data = ''
    num_props = len(props)
    for prop_idx in range(num_props):
        prop = props[prop_idx]
        header_data += \
            f'  {{codepoint{{{prop.codepoint}u}}, {prop.prop_type}}}'
        if prop_idx < num_props - 1:
            header_data += ',\n'

    end_header_data = \
        '\n};\n\n' \
        '} // namespace detail\n' \
        '} // namespace auc\n'

    return f'{start_header_data}{header_data}{end_header_data}'


cpp_header = get_cpp_unordermap_data(
    get_properties('GraphemeBreakProperty.txt', GraphemeBreakProperty)
)
with open('../src/graphemebreakproperty_lookup.cpp', 'w') as gen_header_file:
    gen_header_file.write(cpp_header)
